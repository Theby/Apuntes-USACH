		<section id="title">
			<div class="container">
				<div class="row">
					<div class="col-md-6">
						<h1><%= t('ramos.sde') %></h1>
						<p><%= t('profe.sde') %></p>
					</div>
					<div class="col-md-6">
						<p class="pull-right">Fecha: 01-10-2014</p>
					</div>
				</div>
			</div>
		</section>

		<section id="body">
			<div class="container">
				<h2>Clase 5 - Scalable Processing Systems</h2>

				<p>Estos se usan para sistemas de procesamiento masivo de datos. Una de las fuente de datos son las redes sociales. Se busca discriminar entre los datos que son importantes y los que no.</p>

				<h3>Map Reduce</h3>

				<p>Se maneja los datos mediante un Mapeo y una reducción del volumen de datos. <br>
					Para escalar la información se divide todo en sub-partes. Se manejan controles de fallas para no perder información. <br>
					Ha sido usado principalmente para calcular cosas en la Web: grafos, busquedas, etc. <br>
					Las tareas se dividen en servicios, algunos de ellos son servicios maestros. <br><br>
					Para los errores se mantiene un ping de los workes constantemente.<br>
					Tener partición de datos es de suma importancia.
					</p>

				<h4>Percolator</h4>

				<p>Fue creado por google para detectar cambios pequeños dentro de grandes cantidades de datos. <br>
					Se hace un index de links invertidos para detectar urls cambiantes. <br>
					No se recomienda usar Big Table debido a que es incapaz de generar transacciones entre mutiples filas.</p>

				<p>Existen Observers que permiten notificar cambios en las líneas de código o datos en general. <br>
					En las transacciones se controla un estado en el que no se puede alterar hasta que se termine la transacción.</p>

				<p>La mejora de este tipo a MapReduce crea más gastos en recursos si no se maneja bien.</p>

				<h3>Streaming Databases</h3>

				<p>Aurora: Las consultas son representadas por grafos de operadores. Centralizado.<br>
					Borealis: Aurora distribuido. 
					Stream: Se procesa la información mientras son leídos, de forma que no se guarda información. Tiene buena latencia. Es en tiempo real y continuo. Las secuencias de datos se leen en tuplas, con un id y la información.
				</p>

				<p><b>Load Shedding:</b> Se eliminan los datos que se reciben si es que llega más información de la que se puede procesar.</p>

				<h4>SPS: S4</h4>

				<p>Existen diferentes eventos con diferentes tareas, cada evento puede emitir un evento o más. Los eventos se denominan PE. Se envían Tuplas.</p>

				<p>Si un nodo falla se cambia por uno nuevo.</p>

				<h4>Storm</h4>

				<p>Existen Spouts y Bolts. Similar a S4, pero sin perdida de datos. Agrupa nodos en un flujo de streaming.</p>

				<h4>Samza</h4>

				<p>Se abstrae el streaming. El streaming se particiona en diferentes tareas pre-difinidas. <br>
					Utiliza Kafka y Haddop en algunos casos.</p>

				<p>Tiene tolerancia a fallos: usa modos de checkpoints para hacer respaldos.</p>

				<h4>Capacidad elastica</h4>

				<p>Todos estos sistemas corren con recursos asignados previamente, los cuales son estáticos.<br>
					Se busca que puedan adaptarse a la cantidad de datos que llegan.</p>

				<p>Los query se manejan en grafos, cada nodo tiene un estado, estos pueden ser replicados. Hay nodos que pueden tener un estado fijo y que solo dependen de la información que le llega. Sin embargo hay nodos con estado que reaccionan a los datos historicos de los demás nodos.</p>

				<h3>Distributed DSPS: Interconnect with network to handle geographically distributed stream sources</h3>

				<p>Composición de sistemas de streaming.</p>
			</div>
		</section>

		<section id="footer">
			<div class="container navbar-fixed-bottom">
				<div class="panel panel-success">
					<div class="panel-footer">
						<div class="row">
							<div class="col-md-3">
								<!--
								<%= link_to CLASE_ANTERIOR_PATH, :class => "pull-left" do %>
									<span class="glyphicon glyphicon-arrow-left"></span> Clase X
								<% end %>
								-->
							</div>
							<div class="col-md-3">
								<%= link_to t('ramo.sde'), apuntes_sde_path, :class => "pull-right" %>
							</div>
							<div class="col-md-3">
								<a class="pull-left" href="#top"> Volver Arriba <span class="glyphicon glyphicon-arrow-up"></span></a>
							</div>
							<div class="col-md-3">
								<!--
								<%= link_to CLASE_SIGUIENTE_PATH, :class => "pull-right" do %>
									Clase X <span class="glyphicon glyphicon-arrow-right"></span>
								<% end %>
								-->
							</div>
						</div>
					</div>
					<div class="panel-heading">
						<h3 class="panel-title" align="center"> Desarrollado por Esteban Gaete Flores </h3>
					</div>
				</div>
			</div>
		</section>