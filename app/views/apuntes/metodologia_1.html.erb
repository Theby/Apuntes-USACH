		<section id="title">
			<div class="container">
				<div class="row">
					<div class="col-md-6">
						<h1>Metodología Ágil - SCRUM</h1>
					</div>
					<div class="col-md-6">
					</div>
				</div>
			</div>
		</section>

		<section id="body">
			<div class="container">
				<h2>SCRUM Framework</h2>

				<p>¿Cuándo usar scrum? <br>
					Cuando… <br>
					<ul>
						<li>Hay una prioridad de negocios en la que es de suma importancia entregar un software que cree valor para el cliente.</li>
						<li>Hay poca estabilidad en los requerimientos y estos cambian frecuentemente.</li>
						<li>El producto a generar no es muy rígido o grande.</li>
						<li>El costo de generar prototipos no es elevado.</li>
						<li>El sistema no es de criticidad elevada, es decir, cuando las posibles fallas tienen un costo mínimo y recuperable.</li>
						<li>No están bien definidos los alcances.</li>
						<li>El producto va a ir apareciendo gradualmente a medida que avanza el proyecto.</li>
						<li>Los clientes aprenden más sobre lo que quieren a medida que avanza el proyecto.</li>
						<li>Las actividades no puede ser bien definidas.</li>
						<li>La estimación (planificación) es difícil.</li>
						<li>Los procesos son iterativos.</li>
						<li>Cada ciclo depende mucho de los pasados.</li>
						<li>El éxito está medido por la satisfacción del cliente.</li>
						<li>Los resultados incrementales son útiles y pueden ser usados por los clientes.</li>
					</ul>

					¿Cuándo usar métodos tradicionales?<br>
					Cuando…<br>
					<ul>
						<li>Los alcances están bien definidos.</li>
						<li>Productos similares fueron hechos antes.</li>
						<li>Los requerimientos están bien definidos.</li>
						<li>Pocos cambios son esperados durante el proyecto.</li>
						<li>Los requerimientos no se esperan que cambien mucho.</li>
						<li>El proyectos se puede separar en fases.</li>
						<li>La criticidad del sistema es alta.</li>
						<li>En resumen se puede usar SCRUM si hay muchas incógnitas.</li>
					</ul>
				</p>

				<p>Los cambios deben ser establecidos antes de comenzar un sprint, ya que <b>durante un sprint no se aceptan cambios</b>.</p>

				<p> <%= image_tag('scrum/ciclo_vida_scrum.png', :class => 'img-responsive img-thumbnail') %> </p>

				<h3>Roles:</h3>
				<ul>
					<li>
						Comprometidos:
						<ul>
							<li>
								Product Owner: La voz del cliente. Define las funcionalidades del producto. Decide fechas y contenidos de cada release. Debe ser responsable de la rentabilidad del producto. Prioriza funcionalidades y las ajusta en cada iteración. Finalmente acepta o rechaza el trabajo del equipo. <b><i>Este proceso es iterativo</i></b>
							</li>
							<li>
								SCRUM Master: Facilita SCRUM, asegurando y guíando el proceso. Representa la gestión del proyecto. Responsable de que los valores de SCRUM se cumplan. Asegura que el equipo trabaja funcional y productivamente, además de incetivar la cooperación entre los diferentes roles. Es el escudo para interferencias externas.
							</li>
							<li>
								Team: responsables de crear el producto. Típicamente de 5 a 9 personas, cada uno de ellos es multi-funcional. Son auto-organizados y los roles solo deben cambiar antes de comenzar un nuevo sprint.
							</li>
						</ul>
					</li>
					<li>
						Involucrados:
						<ul>
							<li>
								Usuarios: quienes usarán el producto.
							</li>
							<li>
								Stakeholders: Aquellos que permiten que exista el proyecto, quienes ponene el dinero o deseean esto inicialmente. Puede ser el el product owner.
							</li>
							<li>
								Gerentes: Administradores de la organización que solicita el producto.
							</li>
						</ul>
					</li>
				</ul>

				<h3>Artefactos:</h3>
				<ul>
					<li>
						Historia de usuario: La idea es que la historia de usuario esté escrita como un deseo de un usuario: “YO COMO rol, QUIERO necesidad, PARA razón”. <br>
						Una buena historia de usuario se crea a partir de un método llamado INVEST:
						<ul>
							<li>Independiente: Describe una funcionalidad completa, que no tiene una dependencia inherente con otra historia.</li>
							<li>Negociable: Puede ser modificada hasta que no está en proceso de desarrollo, o incluida en un sprint que se está ejecutando.</li>
							<li>Valiosa: El producto tiene más valor para el cliente cuando la funcionalidad está completada.</li>
							<li>Estimable: Es posible estimar el tamaño de la historia.</li>
							<li>Pequeña (Short en inglés): Tiene que poder estimarse con precisión suficiente empleando técnicas ágiles, que se basan en juicio de expertos y emplean unidades de medida relativas.</li>
							<li>Comprobable (Testable en inglés): Debe incluir información para determinar cuándo está terminada y cumple las expectativas del cliente.</li>
						</ul>
					</li>
					<li>
						Product Backlog: Es una lista de todos los trabajos deseados en el proyecto, una lista de requerimientos. Cada elemento se denomina una historia del usuario. Cada historia tiene un valor. La prioridad de las historias es manejada por el <i>Product Owner</i>.<br>
						Es importante tener estimado y planificado el orden de las historias. Este orden puede cambiar antes de empezar cada Sprint.
					</li>
					<li>
						Sprint Backlog: Se declara el objetivo, foco o meta del sprint a realizar. Para esto se elige una serie de historias las cuáles se dividen en diferentes Task. Estas tareas no son asignadas, cada individuo elige su tarea. Para ver la estimación de trabajo se usar graficos BurnDown. Esto debe actualizarce diariamente. También es posible añadir, modificar o borrar elementos del sprint backlog siempre y cuando no se cambie el objetivo del sprint.
					</li>
					<li>
						Burndown Charts: Da visibilidad sobre si llegaremos a la fecha de entrega en el tiempo dado. Muestra la habilidad de los equipos para entregar funcionalidades.
						<ul>
							<li>Product Burndown: Es del proyecto completo y todas sus tareas conocidas hasta el momento. Se actualiza después de cada sprint.</li>
							<li>Sprint Burndown: Es del sprint, cada grupo tiene una diferente. Se actualiza diariamente.</li>
						</ul>

						<p> <%= image_tag('scrum/burndown.png', :class => 'img-responsive img-thumbnail') %> </p>
					</li>
				</ul>

				<h3>Reuniones:</h3>
				<ul>
					<li>
						Sprint Planning: Se seleccionan temas a partir del <b>Product Backlog</b>, los cuales intentarán cumplirse en el siguiente Sprint. <br>
						Se crea el Sprint Backlog dónde cada tarea a de ser entre 1 a 16 horas.

						<p> <%= image_tag('scrum/sprint_backlog.png', :class => 'img-responsive img-thumbnail') %> </p>
					</li>
					<li>
						Sprint Review: Se presenta lo realizado en el sprint, como un demo o arquitectura. Es informal (sin ppt).
					</li>
					<li>
						Sprint retrospective: Se revisa lo que funciona y lo que no. Se realiza luego de cada sprint. Se busca mejorar el proceso dicutiendo: <b> Que les gustaría empezar a hacer, que les gustaría dejar de hacer y que les gustaría continuar haciendo.</b> También se evalua: <b>Felicidad, productividad y calidad</b>.
					</li>
					<li>
						Daily SCRUM meeting: Son de 15 minutos y de pie. Todo el mundo está inviado, pero solo el Team, Scrum Master y Product Owner pueden hablar. <br>
						Se pregunta: ¿Qué hiciste ayer? ¿Qué vas a hacer hoy? ¿Hay obstáculos en tu camino? Se busca hacer compromisos.
					</li>
				</ul>

				<h3>Comenzando el primer Sprint</h3>

				<dl class="dl-horizontal">
					<dt>Reunión Sprint Planning</dt>
					<dd>Tras ver todas las necesidades del P.O se deben crear las <i>Historias de Usuario</i> (en la misma reunión o en un brake), de modo que al volver a la reunión el P.O. pueda valorar <b>TODAS</b> las historias de usuario. Luego el grupo se dispone a asignar los Story Points a cada historia, estos SP son compartidos con el P.O. a fin de llegar a un concenso, también con la participación del P.O. es posible obtener más información de la historia a fin de poder tener una estimación acertada y aceptada por todos. A esto se le llama <b>Product Backlog</b>.</dd>
					<dt>Sprint Backlog</dt>
					<dd>Una vez terminada la valoración y estimación de las <i>Historias de Usuario</i> se debe crear el <b>Sprint Backlog</b>, esto debe ser realizado sin el P.O. ya que considera aspectos más técnicos y menos relevantes para él.</dd>
					<dt>Tasks</dt>
					<dd>El primer Sprint suele ser el que menos valor le genera al P.O., esto se debe a que hay que abacar muchas <b>Task</b> internas que son propia del grupo de trabajo para poder establecer las bases del proyecto. Estas tareas corresponden a aspectos técnicos, tales como: <b>Aprender a usar las herramientas, incorporar herramientas, conectar bases de datos, ajustar ambiene de trabajo</b>. También se pueden tener task como: <b>Reuniones todas las semanas para compartir, reuniones adicionales a las definidas por SCRUM</b></dd>
					<dt>Reuniones con el P.O.</dt>
					<dd>Se deben realizar cada vez que sea posible, es más, cada vez que una historia del Sprint Backlog ha sido completada es bueno tener una reunión con el P.O. para validar y firmar la confirmación de dicha historia.</dd>
				</dl>				
			</div>
		</section>

		<section id="footer">
			<div class="container navbar-fixed-bottom">
				<div class="panel panel-success">
					<div class="panel-footer">
						<div class="row">
							<div class="col-md-3">
							</div>
							<div class="col-md-3">
							</div>
							<div class="col-md-3">
								<a class="pull-left" href="#top"> Volver Arriba <span class="glyphicon glyphicon-arrow-up"></span></a>
							</div>
							<div class="col-md-3">
							</div>
						</div>
					</div>
					<div class="panel-heading">
						<h3 class="panel-title" align="center"> Desarrollado por Esteban Gaete Flores </h3>
					</div>
				</div>
			</div>
		</section>